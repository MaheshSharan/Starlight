services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: starlight-postgres
    environment:
      POSTGRES_DB: starlight
      POSTGRES_USER: starlight
      POSTGRES_PASSWORD: starlight_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - starlight-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: starlight-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - starlight-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: starlight-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://starlight:starlight_dev_password@postgres:5432/starlight
      REDIS_URL: redis://redis:6379
      TMDB_API_KEY: ${TMDB_API_KEY}
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - starlight-network
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: starlight-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - starlight-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  starlight-network:
    driver: bridge